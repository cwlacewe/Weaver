In file included from LBP.cpp:19:0:
../inc/structure.h: In constructor ‘observe::observe(int, std::string, std::string, int, int, int)’:
../inc/structure.h:16:6: warning: ‘observe::pos’ will be initialized after [-Wreorder]
  int pos;
      ^
../inc/structure.h:15:9: warning:   ‘std::string observe::major_base’ [-Wreorder]
  string major_base, minor_base;
         ^
../inc/structure.h:21:2: warning:   when initialized here [-Wreorder]
  observe(int p, string a, string b, int c, int d, int e) : pos(p),major_base(a), minor_base(b), major_cov(c), minor_cov(d), flag(e) {}
  ^
LBP.cpp: In function ‘void Segment_prob(std::map<std::basic_string<char>, std::vector<site> >&, std::map<std::basic_string<char>, std::vector<interval> >&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::map<site, std::map<hidden_state, double> >&, std::map<site, std::map<hidden_state, double> >&, std::vector<observe>&, int)’:
LBP.cpp:74:46: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < Linear_region[chr].size(); i++){
                                              ^
LBP.cpp:79:93: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(Linear_region[chr][i].start == 0 && Linear_region[chr][i].end == JOB_LIST[chr].size()-1){}
                                                                                             ^
LBP.cpp:83:62: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    else if(Linear_region[chr][i].end == JOB_LIST[chr].size()-1){
                                                              ^
LBP.cpp:93:37: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int ii = 0; ii < ID_store.size(); ii++){
                                     ^
LBP.cpp:96:92: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   if(Linear_region[chr][i].start == 0 && Linear_region[chr][i].end == JOB_LIST[chr].size()-1){}
                                                                                            ^
LBP.cpp:100:61: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   else if(Linear_region[chr][i].end == JOB_LIST[chr].size()-1){
                                                             ^
LBP.cpp: In function ‘double Optimal(std::string, int, int, int, int, int, int, double, double, int, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::map<std::basic_string<char>, std::vector<site> >&, std::vector<observe>&)’:
LBP.cpp:330:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
      if(JOB_LIST[chr].size()-2 > i && i != 0){
                                  ^
LBP.cpp: In function ‘void LoopyBeliefPropagation(std::map<std::basic_string<char>, std::vector<site> >&, std::map<std::basic_string<char>, std::map<int, int> >&, std::map<std::basic_string<char>, std::map<int, int> >&, std::map<std::basic_string<char>, std::map<int, CA> >&, std::map<CA, CA>&, std::map<site, std::map<hidden_state, double> >&, std::map<site, std::map<hidden_state, double> >&, std::map<std::basic_string<char>, std::vector<interval> >&, int)’:
LBP.cpp:520:42: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < SV_PARALLEL_JOB.size(); i++){
                                          ^
LBP.cpp:542:42: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < SV_PARALLEL_JOB.size(); i++){
                                          ^
LBP.cpp: In member function ‘void SV_anno::Factor(std::map<std::basic_string<char>, std::vector<interval> >&, std::map<std::basic_string<char>, std::vector<site> >&, std::map<std::basic_string<char>, std::map<int, int> >&, std::map<site, std::map<hidden_state, double> >&, std::map<site, std::map<hidden_state, double> >&)’:
LBP.cpp:761:22: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
  if(copy_flag_2 == 1 && copy_flag_1 == 1 || copy_flag_2 != 1 && copy_flag_1 != 1){ // deletion : it1 it1_s  it2_s  it2
                      ^
LBP.cpp:643:6: warning: variable ‘dup_flag’ set but not used [-Wunused-but-set-variable]
  int dup_flag = 0;
      ^
LBP.cpp:729:6: warning: unused variable ‘SV_CNV_Major’ [-Wunused-variable]
  int SV_CNV_Major, SV_CNV_minor, SV_CNV ,MAX_SV = -1;
      ^
LBP.cpp:729:20: warning: unused variable ‘SV_CNV_minor’ [-Wunused-variable]
  int SV_CNV_Major, SV_CNV_minor, SV_CNV ,MAX_SV = -1;
                    ^
LBP.cpp:730:9: warning: unused variable ‘local_p’ [-Wunused-variable]
  double local_p, local_sv_p, local_max = 1;
         ^
LBP.cpp: In function ‘void Viterbi(std::map<std::basic_string<char>, std::vector<site> >&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::map<std::basic_string<char>, std::map<int, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::map<int, double> >&, std::vector<observe>&, std::set<site>&, std::set<site>&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<int, int> >&, std::vector<int>&, std::map<CA, int>&, int, std::map<std::basic_string<char>, std::map<int, CA> >&, std::map<CA, CA>&, std::map<std::basic_string<char>, std::vector<interval> >&)’:
LBP.cpp:960:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int k = 0; k < CHR_LIST.size(); k++){
                                   ^
LBP.cpp:1028:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(i= 0; i < JOB_LIST[chr].size(); i++){
                                    ^
LBP.cpp:1285:29: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
             if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                             ^
LBP.cpp:1285:93: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
             if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                                                                                             ^
LBP.cpp:1306:31: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
               if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                               ^
LBP.cpp:1306:95: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
               if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                                                                                               ^
LBP.cpp:1313:18: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
                if(mi_pre == 0)
                  ^
LBP.cpp:1335:29: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
             if(ma_pre <= ma && mi_pre == mi || ma_pre == ma && mi_pre <= mi || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                             ^
LBP.cpp:1335:93: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
             if(ma_pre <= ma && mi_pre == mi || ma_pre == ma && mi_pre <= mi || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                                                                                             ^
LBP.cpp:1364:52: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
               else if(ma_pre <= ma && mi_pre == mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == ma_pre || ma_pre == ma && mi_pre <= mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == mi_pre || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                                                    ^
LBP.cpp:1364:208: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
               else if(ma_pre <= ma && mi_pre == mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == ma_pre || ma_pre == ma && mi_pre <= mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == mi_pre || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                                                                                                                                                                                                                ^
LBP.cpp:1366:36: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
               else if(ma_pre <= ma && mi_pre == mi || ma_pre == ma && mi_pre <= mi)
                                    ^
LBP.cpp:1373:18: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
                if(mi_pre == 0)
                  ^
LBP.cpp:1380:18: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
                if(mi_pre == 0)
                  ^
LBP.cpp:1486:56: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
              if(SNP_LINK[chr][ALL_SNP[cao].pos] == "+" && SNP_FLAG_pre != SNP_FLAG || SNP_LINK[chr][ALL_SNP[cao].pos] == "-" && SNP_FLAG_pre == SNP_FLAG){
                                                        ^
LBP.cpp:1084:8: warning: unused variable ‘PHASE_FLAG’ [-Wunused-variable]
    int PHASE_FLAG = 0;
        ^
LBP.cpp:1630:41: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                         ^
LBP.cpp:973:10: warning: unused variable ‘cov’ [-Wunused-variable]
   double cov = regionCov[chr][interval(JOB_LIST[chr][0].begin, JOB_LIST[chr][0].end)].cov;
          ^
LBP.cpp:1026:7: warning: unused variable ‘SNP_pos_temp’ [-Wunused-variable]
   int SNP_pos_temp = 0;
       ^
LBP.cpp:1654:42: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < SV_PARALLEL_JOB.size(); i++){
                                          ^
LBP.cpp: In function ‘void final_report(std::map<std::basic_string<char>, std::vector<site> >&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<int, CA> >&, std::map<CA, CA>&, std::vector<observe>&)’:
LBP.cpp:1714:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                        ^
LBP.cpp:1715:33: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i == JOB_LIST[chr].size()-1){
                                 ^
LBP.cpp:1743:58: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
        if(Allele_A_temp == 0 || temp_CA.sv_type == "dup" && SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM == Allele_A_temp){
                                                          ^
LBP.cpp:1763:59: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         if(Allele_B_temp == 0 || temp_CA.sv_type == "dup" && SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM == Allele_B_temp){
                                                           ^
LBP.cpp:1782:59: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         if(Allele_A_temp == 0 || temp_CA.sv_type == "dup" && SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM == Allele_A_temp){
                                                           ^
LBP.cpp:1836:141: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
        if(Allele_A_temp == SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM || Allele_A_temp  == 2*SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM && temp_CA.sv_type == "dup"){
                                                                                                                                             ^
LBP.cpp:1846:37: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         if(temp_CA.sv_type == "dup" && Allele_A_temp > 2*SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM || temp_CA.sv_type != "dup"){
                                     ^
LBP.cpp:1856:141: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
        if(Allele_B_temp == SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM || Allele_B_temp  == 2*SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM && temp_CA.sv_type == "dup"){
                                                                                                                                             ^
LBP.cpp:1865:37: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
         if(temp_CA.sv_type == "dup" && Allele_B_temp > 2*SV_PARALLEL_JOB[ CA_2_SV_anno[temp_CA] ].NUM || temp_CA.sv_type != "dup"){
                                     ^
LBP.cpp:1724:9: warning: unused variable ‘phase_flag’ [-Wunused-variable]
     int phase_flag; //+1 for A -1 for B
         ^
LBP.cpp:1887:9: warning: unused variable ‘p_flag’ [-Wunused-variable]
     int p_flag;
         ^
LBP.cpp:1701:7: warning: variable ‘id_b’ set but not used [-Wunused-but-set-variable]
   int id_b = 0;
       ^
LBP.cpp:1706:7: warning: unused variable ‘FLAG_BB’ [-Wunused-variable]
   int FLAG_BB;
       ^
LBP.cpp:1707:7: warning: unused variable ‘copy_flag’ [-Wunused-variable]
   int copy_flag;
       ^
LBP.cpp:1708:7: warning: unused variable ‘old_copy’ [-Wunused-variable]
   int old_copy;
       ^
LBP.cpp:1923:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < it->second.size(); i++){
                                      ^
LBP.cpp:1924:51: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for(int j = 0; j < it->second[i].SV_BLOCK.size(); j++){
                                                   ^
LBP.cpp:1931:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < it->second.size(); i++){
                                      ^
LBP.cpp:1942:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < it->second.size(); i++){
                                      ^
LBP.cpp:1947:42: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < SV_PARALLEL_JOB.size(); i++){
                                          ^
LBP.cpp: In function ‘void traversal(hapBlock&, std::map<CA, CA>&)’:
LBP.cpp:1967:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < hap.SV_BLOCK.size(); i++){
                                        ^
LBP.cpp: In member function ‘void hapBlock::print_hapBlock(std::map<CA, CA>&, std::map<std::basic_string<char>, std::vector<site> >&, std::vector<observe>&, std::map<std::basic_string<char>, std::map<int, int> >&, std::ofstream&, std::ofstream&, std::ofstream&)’:
LBP.cpp:1989:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i =0; i < REGION.size(); i++){
                                ^
LBP.cpp:2031:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < SV_BLOCK.size(); i++){
                                   ^
LBP.cpp:2032:35: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
   if(chr == LINK[SV_BLOCK[i]].chr && SV_BLOCK[i].pos < LINK[SV_BLOCK[i]].pos || chr < LINK[SV_BLOCK[i]].chr){
                                   ^
LBP.cpp: In function ‘void Viterbi_new(std::map<std::basic_string<char>, std::vector<site> >&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::map<std::basic_string<char>, std::map<int, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::map<int, double> >&, std::vector<observe>&, std::set<site>&, std::set<site>&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<int, int> >&, std::vector<int>&, std::map<CA, int>&, int, std::map<std::basic_string<char>, std::map<int, CA> >&, std::map<CA, CA>&, std::vector<std::basic_string<char> >&)’:
LBP.cpp:2098:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int k = 0; k < CHR_LIST.size(); k++){
                                   ^
LBP.cpp:2132:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                        ^
LBP.cpp:2186:11: warning: unused variable ‘minor’ [-Wunused-variable]
       int minor;
           ^
LBP.cpp:2150:8: warning: unused variable ‘PHASE_FLAG’ [-Wunused-variable]
    int PHASE_FLAG = 0;
        ^
LBP.cpp:2155:8: warning: unused variable ‘local_del_flag_1’ [-Wunused-variable]
    int local_del_flag_1 = 0;
        ^
LBP.cpp:2156:8: warning: unused variable ‘local_del_flag_2’ [-Wunused-variable]
    int local_del_flag_2 = 0;
        ^
LBP.cpp:2157:11: warning: unused variable ‘max_freq’ [-Wunused-variable]
    double max_freq = 0;
           ^
LBP.cpp:2348:41: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                         ^
LBP.cpp:2470:34: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     if(i == JOB_LIST[chr].size()-1){
                                  ^
LBP.cpp:2565:42: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                          ^
LBP.cpp:2104:17: warning: unused variable ‘P_freq’ [-Wunused-variable]
   double P_cov, P_freq;
                 ^
LBP.cpp:2110:10: warning: unused variable ‘cov’ [-Wunused-variable]
   double cov = regionCov[chr][interval(JOB_LIST[chr][0].begin, JOB_LIST[chr][0].end)].cov;
          ^
LBP.cpp:2121:14: warning: unused variable ‘mi_pre’ [-Wunused-variable]
   int mi =0, mi_pre=0;
              ^
LBP.cpp:2131:7: warning: unused variable ‘SNP_pos_temp’ [-Wunused-variable]
   int SNP_pos_temp = 0;
       ^
LBP.cpp: In function ‘void Viterbi_lite(std::map<std::basic_string<char>, std::vector<site> >&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::map<std::basic_string<char>, std::map<int, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::map<int, double> >&, std::vector<observe>&, std::set<site>&, std::set<site>&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<int, int> >&, std::vector<int>&, std::map<CA, int>&, int, std::map<std::basic_string<char>, std::map<int, CA> >&, std::map<CA, CA>&, std::map<std::basic_string<char>, std::vector<interval> >&)’:
LBP.cpp:2614:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int k = 0; k < CHR_LIST.size(); k++){
                                   ^
LBP.cpp:2663:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(i= 0; i < JOB_LIST[chr].size(); i++){
                                    ^
LBP.cpp:2865:28: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
            if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                            ^
LBP.cpp:2865:92: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
            if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                                                                                            ^
LBP.cpp:2886:30: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
              if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                              ^
LBP.cpp:2886:94: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
              if(ma_pre >= ma && mi_pre == mi || ma_pre == ma && mi_pre >= mi || ma == mi_pre && (mi == 0 || ma_pre - mi == 1))
                                                                                              ^
LBP.cpp:2893:17: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
               if(mi_pre == 0)
                 ^
LBP.cpp:2915:28: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
            if(ma_pre <= ma && mi_pre == mi || ma_pre == ma && mi_pre <= mi || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                            ^
LBP.cpp:2915:92: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
            if(ma_pre <= ma && mi_pre == mi || ma_pre == ma && mi_pre <= mi || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                                                                                            ^
LBP.cpp:2943:51: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
              else if(ma_pre <= ma && mi_pre == mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == ma_pre || ma_pre == ma && mi_pre <= mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == mi_pre || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                                                   ^
LBP.cpp:2943:207: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
              else if(ma_pre <= ma && mi_pre == mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == ma_pre || ma_pre == ma && mi_pre <= mi && SV_list_CNV[chr][JOB_LIST[chr][i].begin] == mi_pre || mi == ma_pre && (mi_pre == 0 || ma - mi_pre == 1))
                                                                                                                                                                                                               ^
LBP.cpp:2945:35: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
              else if(ma_pre <= ma && mi_pre == mi || ma_pre == ma && mi_pre <= mi)
                                   ^
LBP.cpp:2952:17: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
               if(mi_pre == 0)
                 ^
LBP.cpp:2959:17: warning: suggest explicit braces to avoid ambiguous ‘else’ [-Wparentheses]
               if(mi_pre == 0)
                 ^
LBP.cpp:2685:8: warning: unused variable ‘PHASE_FLAG’ [-Wunused-variable]
    int PHASE_FLAG = 0;
        ^
LBP.cpp:3123:41: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                         ^
LBP.cpp:2624:10: warning: unused variable ‘cov’ [-Wunused-variable]
   double cov = regionCov[chr][interval(JOB_LIST[chr][0].begin, JOB_LIST[chr][0].end)].cov;
          ^
LBP.cpp:2661:7: warning: unused variable ‘SNP_pos_temp’ [-Wunused-variable]
   int SNP_pos_temp = 0;
       ^
LBP.cpp:3153:42: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < SV_PARALLEL_JOB.size(); i++){
                                          ^
LBP.cpp: In function ‘int Part_Viterbi(std::string, int, int, int, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::map<std::basic_string<char>, std::vector<site> >&, std::map<site, std::map<hidden_state, double> >&, std::map<site, std::map<hidden_state, double> >&, std::vector<observe>&)’:
LBP.cpp:268:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
In file included from main.cpp:22:0:
../inc/structure.h: In constructor ‘observe::observe(int, std::string, std::string, int, int, int)’:
../inc/structure.h:16:6: warning: ‘observe::pos’ will be initialized after [-Wreorder]
  int pos;
      ^
../inc/structure.h:15:9: warning:   ‘std::string observe::major_base’ [-Wreorder]
  string major_base, minor_base;
         ^
../inc/structure.h:21:2: warning:   when initialized here [-Wreorder]
  observe(int p, string a, string b, int c, int d, int e) : pos(p),major_base(a), minor_base(b), major_cov(c), minor_cov(d), flag(e) {}
  ^
In file included from /home/yangli9/tools/boost_1_55_0/boost/mpl/aux_/integral_wrapper.hpp:22:0,
                 from /home/yangli9/tools/boost_1_55_0/boost/mpl/int.hpp:20,
                 from /home/yangli9/tools/boost_1_55_0/boost/type_traits/detail/template_arity_spec.hpp:10,
                 from /home/yangli9/tools/boost_1_55_0/boost/type_traits/detail/type_trait_def.hpp:14,
                 from /home/yangli9/tools/boost_1_55_0/boost/type_traits/remove_reference.hpp:21,
                 from /home/yangli9/tools/boost_1_55_0/boost/any.hpp:21,
                 from /home/yangli9/tools/boost_1_55_0/boost/program_options/value_semantic.hpp:12,
                 from /home/yangli9/tools/boost_1_55_0/boost/program_options/options_description.hpp:13,
                 from /home/yangli9/tools/boost_1_55_0/boost/program_options.hpp:15,
                 from main.cpp:27:
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In function ‘void boost::function_requires(Model*)’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check45’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:45:7: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
       BOOST_CONCEPT_ASSERT((Model));
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::AdaptableGenerator<Func, Return>::~AdaptableGenerator()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check453’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:453:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<result_type, Return>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::AdaptableUnaryFunction<Func, Return, Arg>::~AdaptableUnaryFunction()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check465’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:465:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<result_type, Return>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check466’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:466:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<Arg, argument_type>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::AdaptableBinaryFunction<Func, Return, First, Second>::~AdaptableBinaryFunction()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check484’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:484:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<result_type, Return>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check485’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:485:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<First, first_argument_type>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check486’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:486:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<Second, second_argument_type>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::InputIterator<TT>::~InputIterator()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check517’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:517:9: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
         BOOST_CONCEPT_ASSERT((SignedInteger<difference_type>));
         ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check518’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:518:9: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
         BOOST_CONCEPT_ASSERT((Convertible<iterator_category, std::input_iterator_tag>));
         ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::ForwardIterator<TT>::~ForwardIterator()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check551’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:548:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::BidirectionalIterator<TT>::~BidirectionalIterator()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check579’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:576:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::RandomAccessIterator<TT>::~RandomAccessIterator()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check609’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:606:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Convertible<
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::Container<C>::~Container()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check653’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:653:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((InputIterator<const_iterator>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::Mutable_Container<C>::~Mutable_Container()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check681’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:680:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check683’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:683:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((InputIterator<iterator>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::ForwardContainer<C>::~ForwardContainer()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check703’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:700:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::Mutable_ForwardContainer<C>::~Mutable_ForwardContainer()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check716’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:713:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::ReversibleContainer<C>::~ReversibleContainer()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check731’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:729:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check733’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:733:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((BidirectionalIterator<const_reverse_iterator>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::Mutable_ReversibleContainer<C>::~Mutable_ReversibleContainer()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check755’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:755:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Mutable_BidirectionalIterator<iterator>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check756’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:756:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Mutable_BidirectionalIterator<reverse_iterator>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::RandomAccessContainer<C>::~RandomAccessContainer()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check776’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:773:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::Mutable_RandomAccessContainer<C>::~Mutable_RandomAccessContainer()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check800’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:800:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Mutable_RandomAccessIterator<typename self::iterator>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check801’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:801:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((Mutable_RandomAccessIterator<typename self::reverse_iterator>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp: In destructor ‘boost::AssociativeContainer<C>::~AssociativeContainer()’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check905’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:905:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((BinaryPredicate<key_compare,key_type,key_type>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check908’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/concept_check.hpp:908:11: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
           BOOST_CONCEPT_ASSERT((BinaryPredicate<value_compare,value_type_,value_type_>));
           ^
/home/yangli9/tools/boost_1_55_0/boost/range/algorithm/equal.hpp: In function ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&)’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check172’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/range/concepts.hpp:92:45: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
     #define BOOST_RANGE_CONCEPT_ASSERT( x ) BOOST_CONCEPT_ASSERT( x )
                                             ^
/home/yangli9/tools/boost_1_55_0/boost/range/algorithm/equal.hpp:172:13: note: in expansion of macro ‘BOOST_RANGE_CONCEPT_ASSERT’
             BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange1> ));
             ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check173’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/range/concepts.hpp:92:45: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
     #define BOOST_RANGE_CONCEPT_ASSERT( x ) BOOST_CONCEPT_ASSERT( x )
                                             ^
/home/yangli9/tools/boost_1_55_0/boost/range/algorithm/equal.hpp:173:13: note: in expansion of macro ‘BOOST_RANGE_CONCEPT_ASSERT’
             BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange2> ));
             ^
/home/yangli9/tools/boost_1_55_0/boost/range/algorithm/equal.hpp: In function ‘bool boost::range::equal(const SinglePassRange1&, const SinglePassRange2&, BinaryPredicate)’:
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check185’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/range/concepts.hpp:92:45: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
     #define BOOST_RANGE_CONCEPT_ASSERT( x ) BOOST_CONCEPT_ASSERT( x )
                                             ^
/home/yangli9/tools/boost_1_55_0/boost/range/algorithm/equal.hpp:185:13: note: in expansion of macro ‘BOOST_RANGE_CONCEPT_ASSERT’
             BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange1> ));
             ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:20: warning: typedef ‘boost_concept_check186’ locally defined but not used [-Wunused-local-typedefs]
       BOOST_PP_CAT(boost_concept_check,__LINE__)
                    ^
/home/yangli9/tools/boost_1_55_0/boost/preprocessor/cat.hpp:29:34: note: in definition of macro ‘BOOST_PP_CAT_I’
 #    define BOOST_PP_CAT_I(a, b) a ## b
                                  ^
/home/yangli9/tools/boost_1_55_0/boost/concept/detail/general.hpp:71:7: note: in expansion of macro ‘BOOST_PP_CAT’
       BOOST_PP_CAT(boost_concept_check,__LINE__)
       ^
/home/yangli9/tools/boost_1_55_0/boost/concept/assert.hpp:44:5: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT_FN’
     BOOST_CONCEPT_ASSERT_FN(void(*)ModelInParens)
     ^
/home/yangli9/tools/boost_1_55_0/boost/range/concepts.hpp:92:45: note: in expansion of macro ‘BOOST_CONCEPT_ASSERT’
     #define BOOST_RANGE_CONCEPT_ASSERT( x ) BOOST_CONCEPT_ASSERT( x )
                                             ^
/home/yangli9/tools/boost_1_55_0/boost/range/algorithm/equal.hpp:186:13: note: in expansion of macro ‘BOOST_RANGE_CONCEPT_ASSERT’
             BOOST_RANGE_CONCEPT_ASSERT(( SinglePassRangeConcept<const SinglePassRange2> ));
             ^
main.cpp: In function ‘int usage()’:
main.cpp:96:1: warning: no return statement in function returning non-void [-Wreturn-type]
 }
 ^
In file included from partition.cpp:19:0:
../inc/structure.h: In constructor ‘observe::observe(int, std::string, std::string, int, int, int)’:
../inc/structure.h:16:6: warning: ‘observe::pos’ will be initialized after [-Wreorder]
  int pos;
      ^
../inc/structure.h:15:9: warning:   ‘std::string observe::major_base’ [-Wreorder]
  string major_base, minor_base;
         ^
../inc/structure.h:21:2: warning:   when initialized here [-Wreorder]
  observe(int p, string a, string b, int c, int d, int e) : pos(p),major_base(a), minor_base(b), major_cov(c), minor_cov(d), flag(e) {}
  ^
partition.cpp: In function ‘int Partition(std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::vector<site> >&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::vector<observe>&, std::map<std::basic_string<char>, int>&, std::map<std::basic_string<char>, std::map<int, int> >&, std::map<std::basic_string<char>, std::map<int, CA> >&, std::string, std::string, std::string, int, int)’:
partition.cpp:240:46: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i= 0; i < JOB_LIST[it->first].size(); i++){
                                              ^
partition.cpp:340:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                        ^
partition.cpp:262:6: warning: unused variable ‘id’ [-Wunused-variable]
  int id = 0;
      ^
partition.cpp: In function ‘void Job_partition(std::map<std::basic_string<char>, std::vector<site> >&, std::set<site>&, std::set<site>&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<int, int> >&, std::map<std::basic_string<char>, std::map<int, int> >&, std::map<std::basic_string<char>, std::vector<interval> >&, std::map<std::basic_string<char>, std::vector<Linear_region_info> >&)’:
partition.cpp:380:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                        ^
partition.cpp:400:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    if(i < JOB_LIST[chr].size()-1){
                                ^
partition.cpp:377:7: warning: variable ‘Duration’ set but not used [-Wunused-but-set-variable]
   int Duration = 0;
       ^
partition.cpp: In function ‘int Partition(std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::vector<site> >&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::set<site>&, std::set<site>&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::vector<observe>&, std::map<std::basic_string<char>, int>&, std::map<std::basic_string<char>, std::map<int, int> >&, std::map<std::basic_string<char>, std::map<int, CA> >&, std::string, std::string, std::string, int, int)’:
partition.cpp:371:1: warning: control reaches end of non-void function [-Wreturn-type]
 }
 ^
In file included from ploidy.cpp:20:0:
../inc/structure.h: In constructor ‘observe::observe(int, std::string, std::string, int, int, int)’:
../inc/structure.h:16:6: warning: ‘observe::pos’ will be initialized after [-Wreorder]
  int pos;
      ^
../inc/structure.h:15:9: warning:   ‘std::string observe::major_base’ [-Wreorder]
  string major_base, minor_base;
         ^
../inc/structure.h:21:2: warning:   when initialized here [-Wreorder]
  observe(int p, string a, string b, int c, int d, int e) : pos(p),major_base(a), minor_base(b), major_cov(c), minor_cov(d), flag(e) {}
  ^
ploidy.cpp: In function ‘void Estimate_ploidy(double, std::map<std::basic_string<char>, std::vector<site> >&, int, int, std::map<std::basic_string<char>, std::vector<interval> >&, std::map<std::basic_string<char>, std::vector<Linear_region_info> >&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::vector<observe>&, int)’:
ploidy.cpp:69:46: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < Linear_region[chr].size(); i++){
                                              ^
ploidy.cpp:99:49: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
      for(int i = 0; i < Linear_region[chr].size(); i++){
                                                 ^
ploidy.cpp:76:11: warning: unused variable ‘LOH_cutoff’ [-Wunused-variable]
    double LOH_cutoff = 0.5*test_mean;
           ^
ploidy.cpp:182:40: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i= 0; i < JOB_LIST[chr].size(); i++){
                                        ^
ploidy.cpp:145:6: warning: unused variable ‘sb’ [-Wunused-variable]
  int sb = 0;
      ^
In file included from read.cpp:19:0:
../inc/structure.h: In constructor ‘observe::observe(int, std::string, std::string, int, int, int)’:
../inc/structure.h:16:6: warning: ‘observe::pos’ will be initialized after [-Wreorder]
  int pos;
      ^
../inc/structure.h:15:9: warning:   ‘std::string observe::major_base’ [-Wreorder]
  string major_base, minor_base;
         ^
../inc/structure.h:21:2: warning:   when initialized here [-Wreorder]
  observe(int p, string a, string b, int c, int d, int e) : pos(p),major_base(a), minor_base(b), major_cov(c), minor_cov(d), flag(e) {}
  ^
read.cpp: In function ‘void readSV(std::ifstream&, std::map<std::basic_string<char>, int>&, std::map<std::basic_string<char>, int>&, std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::map<std::basic_string<char>, std::map<int, CA> >&, std::map<CA, CA>&)’:
read.cpp:72:6: warning: unused variable ‘id’ [-Wunused-variable]
  int id = 0;
      ^
read.cpp: In function ‘void readRange(std::ifstream&, std::map<std::basic_string<char>, int>&, std::map<std::basic_string<char>, int>&, std::map<std::basic_string<char>, std::map<interval, std::basic_string<char> > >&, std::vector<std::basic_string<char> >&)’:
read.cpp:300:6: warning: unused variable ‘id’ [-Wunused-variable]
  int id = 0;
      ^
In file included from class.cpp:16:0:
../inc/structure.h: In constructor ‘observe::observe(int, std::string, std::string, int, int, int)’:
../inc/structure.h:16:6: warning: ‘observe::pos’ will be initialized after [-Wreorder]
  int pos;
      ^
../inc/structure.h:15:9: warning:   ‘std::string observe::major_base’ [-Wreorder]
  string major_base, minor_base;
         ^
../inc/structure.h:21:2: warning:   when initialized here [-Wreorder]
  observe(int p, string a, string b, int c, int d, int e) : pos(p),major_base(a), minor_base(b), major_cov(c), minor_cov(d), flag(e) {}
  ^
class.cpp: In member function ‘double Linear_region_info::eva(double)’:
class.cpp:187:12: warning: variable ‘J’ set but not used [-Wunused-but-set-variable]
  double I, J;
            ^
In file included from new_ploidy.cpp:20:0:
../inc/structure.h: In constructor ‘observe::observe(int, std::string, std::string, int, int, int)’:
../inc/structure.h:16:6: warning: ‘observe::pos’ will be initialized after [-Wreorder]
  int pos;
      ^
../inc/structure.h:15:9: warning:   ‘std::string observe::major_base’ [-Wreorder]
  string major_base, minor_base;
         ^
../inc/structure.h:21:2: warning:   when initialized here [-Wreorder]
  observe(int p, string a, string b, int c, int d, int e) : pos(p),major_base(a), minor_base(b), major_cov(c), minor_cov(d), flag(e) {}
  ^
new_ploidy.cpp: In function ‘void pute(std::string, int, std::map<std::basic_string<char>, std::vector<site> >&, std::map<std::basic_string<char>, std::vector<interval> >&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::vector<observe>&, std::ofstream&)’:
new_ploidy.cpp:109:12: warning: variable ‘rate_mean’ set but not used [-Wunused-but-set-variable]
     double rate_mean, rate_dens;
            ^
new_ploidy.cpp:109:23: warning: unused variable ‘rate_dens’ [-Wunused-variable]
     double rate_mean, rate_dens;
                       ^
new_ploidy.cpp: In function ‘void new_Estimate_ploidy(double, std::map<std::basic_string<char>, std::vector<site> >&, int, int, std::map<std::basic_string<char>, std::vector<interval> >&, std::map<std::basic_string<char>, std::vector<Linear_region_info> >&, std::map<std::basic_string<char>, std::map<interval, region_numbers> >&, std::vector<observe>&, int)’:
new_ploidy.cpp:171:46: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < Linear_region[chr].size(); i++){
                                              ^
new_ploidy.cpp:213:33: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for(int ii = 0; ii < S2.size(); ii++){//f2 = 2; f2 < f1*0.8; f2 += 0.2){
                                 ^
new_ploidy.cpp:216:54: warning: suggest parentheses around ‘&&’ within ‘||’ [-Wparentheses]
     if(!(fabs(norm - 6.6) < 0.1 && fabs(f1 - 10)<0.1 && fabs(f2 - 6.8)<0.1 || fabs(norm - 7.2)<0.1 && fabs(f1 - 12)<0.1 && fabs(f2 - 4.2)<0.1)){
                                                      ^
new_ploidy.cpp:225:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i = 0; i < WORK_SEG.size(); i++){
                                      ^
new_ploidy.cpp:244:16: warning: variable ‘p’ set but not used [-Wunused-but-set-variable]
         double p = 0;
                ^
new_ploidy.cpp:241:11: warning: variable ‘f1_mi_f’ set but not used [-Wunused-but-set-variable]
       int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
           ^
new_ploidy.cpp:241:20: warning: variable ‘f1_ma_f’ set but not used [-Wunused-but-set-variable]
       int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
                    ^
new_ploidy.cpp:241:29: warning: variable ‘f2_mi_f’ set but not used [-Wunused-but-set-variable]
       int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
                             ^
new_ploidy.cpp:241:38: warning: variable ‘f2_ma_f’ set but not used [-Wunused-but-set-variable]
       int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
                                      ^
new_ploidy.cpp:288:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < WORK_SEG.size(); i++){
                                   ^
new_ploidy.cpp:164:9: warning: unused variable ‘max’ [-Wunused-variable]
  double max = 0;
         ^
new_ploidy.cpp:165:9: warning: unused variable ‘base_cov’ [-Wunused-variable]
  double base_cov;
         ^
getGC.cpp: In function ‘void GC(std::string)’:
getGC.cpp:29:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for (int i = 0; i < range[chr].size(); i++){
                                      ^
getGC.cpp:39:28: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   if(e > single_ref.length())
                            ^
getGC.cpp: In function ‘double computeGC(std::string)’:
getGC.cpp:56:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < seq.length(); i++){
                                ^
getGC.cpp: In function ‘int run_from_ref(std::ifstream&)’:
getGC.cpp:72:6: warning: unused variable ‘F’ [-Wunused-variable]
  int F = 1;
      ^
solo_ploidy.cpp: In function ‘void new_Estimate_ploidy(std::ifstream&, int)’:
solo_ploidy.cpp:231:35: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
  for(int i = 0; i < WORK_SEG.size(); i++){
                                   ^
solo_ploidy.cpp:270:32: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int jj = 0; jj < S1.size(); jj++){
                                ^
solo_ploidy.cpp:283:33: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
    for(int ii = 0; ii < S2.size(); ii++){//f2 = 2; f2 < f1*0.8; f2 += 0.2){
                                 ^
solo_ploidy.cpp:292:38: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
     for(int i = 0; i < WORK_SEG.size(); i++){
                                      ^
solo_ploidy.cpp:312:15: warning: variable ‘p’ set but not used [-Wunused-but-set-variable]
        double p = 0;
               ^
solo_ploidy.cpp:309:10: warning: variable ‘f1_mi_f’ set but not used [-Wunused-but-set-variable]
      int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
          ^
solo_ploidy.cpp:309:19: warning: variable ‘f1_ma_f’ set but not used [-Wunused-but-set-variable]
      int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
                   ^
solo_ploidy.cpp:309:28: warning: variable ‘f2_mi_f’ set but not used [-Wunused-but-set-variable]
      int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
                            ^
solo_ploidy.cpp:309:37: warning: variable ‘f2_ma_f’ set but not used [-Wunused-but-set-variable]
      int f1_mi_f, f1_ma_f, f2_mi_f, f2_ma_f;
                                     ^
solo_ploidy.cpp:374:36: warning: comparison between signed and unsigned integer expressions [-Wsign-compare]
   for(int i = 0; i < WORK_SEG.size(); i++){
                                    ^
solo_ploidy.cpp:389:13: warning: variable ‘p’ set but not used [-Wunused-but-set-variable]
      double p = 0;
             ^
solo_ploidy.cpp:224:9: warning: unused variable ‘max’ [-Wunused-variable]
  double max = 0;
         ^
solo_ploidy.cpp:225:9: warning: unused variable ‘base_cov’ [-Wunused-variable]
  double base_cov;
         ^
solo_ploidy.cpp:256:15: warning: unused variable ‘f1’ [-Wunused-variable]
  double norm, f1, BB_norm, BB_f1, BB_f2;
               ^
solo_ploidy.cpp: In function ‘int main(int, char**)’:
solo_ploidy.cpp:440:7: warning: unused variable ‘thread’ [-Wunused-variable]
   int thread = 64;
       ^
newParse_memfix.cpp: In function ‘void readVCF(std::ifstream&)’:
newParse_memfix.cpp:49:7: warning: unused variable ‘position’ [-Wunused-variable]
   int position = atoi(pos.c_str());
       ^
newParse_memfix.cpp:36:6: warning: unused variable ‘id’ [-Wunused-variable]
  int id = 0;
      ^
newParse_memfix.cpp: In function ‘void readBAM()’:
newParse_memfix.cpp:76:6: warning: unused variable ‘b’ [-Wunused-variable]
  int b, e;
      ^
newParse_memfix.cpp:76:9: warning: unused variable ‘e’ [-Wunused-variable]
  int b, e;
         ^
newParse_memfix.cpp:77:6: warning: unused variable ‘flag’ [-Wunused-variable]
  int flag=0;
      ^
